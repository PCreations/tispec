<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>TiSpec</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">

    <link href="/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/lib/bootstrap/css/bootstrap-responsive.min.css" rel="stylesheet">
    <link href="/stylesheets/tispec.css" rel="stylesheet">

    <script type="text/javascript" src="/javascripts/SpecsSuite.js"></script>

    <script type="text/javascript" src="/lib/bootstrap/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="/javascripts/jquery-2.0.0.min.js"></script>
    <script type="text/javascript" src="/javascripts/bootstrap-tooltip.js"></script>
    <script type="text/javascript" src="/javascripts/bootstrap-popover.js"></script>
    <script type="text/javascript" src="/javascripts/jquery.knob.js"></script>
    <script type="text/javascript" src="/socket.io/socket.io.js"></script>
  </head>

  <body data-spy="scroll" data-target=".bs-docs-sidebar">

      <div class="row-fluid">
        <div class="page-header" style="margin-top: 0px;">
          <h1 style="padding-left: 20px;">Tispec <small>The ultimate Titanium test engine</small></h1>
        </div>
      </div>

      <div id="specs_suites" class="row-fluid">
        <!-- specs_suites here -->
      </div>

    </div>
  </body>

  <script type="text/javascript">

    var socket, specsSuites = {};

    // Socket
    // =========================================================================

    socket = io.connect('http://localhost');

    socket.on('confirmSpec', function (expectedBehavior) {
      var confirmationDiv = $('#spec_confirmation_' + expectedBehavior.specsSuiteId);

      confirmationDiv.find('.confirmation_expected_message').text(expectedBehavior.description);
      confirmationDiv.show();
    });

    socket.on('hello', function(config) {
      specsSuites[config.id] = config

      $.get('/specs_suites/' + config.id, function(data) {
        $('#specs_suites').append(data);
        initializeView(config);
      });
    });

    socket.on('start', function(_specsSuite) {
      specsSuites[_specsSuite.specsSuiteId] = new SpecsSuite(_specsSuite.specsSuiteId, _specsSuite.appName, _specsSuite.deviceName, _specsSuite.totalCount);
    });

    socket.on('specStart', function(spec) {
      // [TODO] add row in the specs table
    });

    socket.on('specEnd', function(spec) {
      // [TODO] complete spec row with the results
      appendSpecResult(spec);
    });

    socket.on('suiteEnd', function(suite) {
      appendSuiteEnd(suite);
    });

    socket.on('end', function(specsSuiteId) {
      $('.spec_row').each(function() {
        // Add a popover displaying the results of the specs
        if ($(this).data('content')) {
          $(this).popover('hide');
        }
      });
    });

    function runSpecs(specsSuiteId, form) {
      var specsSuite = specsSuites[specsSuiteId];
      initializeView(specsSuite);

      var filter = $(form).find(':input').first().val();
      socket.emit('runSpecs', {specsSuiteId: specsSuiteId, filter: filter});
      return false;
    }

    function validateSpec(specsSuiteId, valide) {
      $('#spec_confirmation_' + specsSuiteId).hide();
      socket.emit('confirmSpecResult', { specsSuiteId: specsSuiteId, valide: valide });
    }

    function endSpecsSuite(specsSuiteId) {
      delete specsSuites[specsSuiteId];
      $('#specs_suite_' + specsSuiteId).remove();
    }

    // Specs
    // =========================================================================

    function initializeView(specsSuite) {
      $('#specs_results_' + specsSuite.id).find("tr:gt(0)").remove();
      $('#specs_suite_avancement_success_' + specsSuite.id + ' > .bar').css("width", "0%");
      $('#specs_suite_avancement_error_' + specsSuite.id + ' > .bar').css("width", "0%");
      $('#specs_suite_avancement_' + specsSuite.id).val(0).trigger('change');
      $('#specs_suite_title_' + specsSuite.id).text(specsSuite.appName + ' (' + specsSuite.appVersion + ') / ' + specsSuite.deviceName);
      $("#specs_suite_avancement_" + specsSuite.id).knob({
        width:    60,
        height:   60,
        readOnly: true
      });
    }

    function updateAvancement(specsSuite) {
      var passed           = specsSuite.passedCount,
          error            = specsSuite.errorCount,
          advancement      = (passed+error)/specsSuite.totalCount * 100,
          passedPercentage = (passed / specsSuite.totalCount) * 100,
          errorPercentage  = (error / specsSuite.totalCount) * 100;

      $('#specs_suite_avancement_success_' + specsSuite.id + ' > .bar').css( "width", passedPercentage + "%" );
      $('#specs_suite_avancement_error_' + specsSuite.id + ' > .bar').css( "width", errorPercentage + "%" );
      $('#specs_suite_avancement_' + specsSuite.id).val( advancement ).trigger('change');
    }

    function appendSpecResult(spec) {
      var errorMessages = [];
      for (var i=0, l=spec.subSpecs.length; i<l; i += 1) {
        var subSpec = spec.subSpecs[i];

        if (!subSpec.passed_) {
          errorMessages.push('(' + (i+1) + ') expected <b>' + JSON.stringify(subSpec.actual) + '</b> to be <b>' + JSON.stringify(subSpec.expected) + '</b>');
        }
      }

      var row = '<tr class="spec_row ' + (spec.passed ? 'success' : 'error') + '"';
      if (errorMessages.length > 0) {
        var errorMessage = '<ul><li>' + errorMessages.join('</li><li>') + '</li></ul>';

        row += ' data-title="Errors" data-content="' + errorMessage + '" data-placement="top" data-html="true"';
      }
      row += '><td>' + spec.suiteName + ' ' + spec.description + '</td><td>' + spec.passedCount + '/' + spec.totalCount + '</td></tr>';

      $(row).prependTo('#specs_results_' + spec.specsSuiteId);

      var specsSuite = specsSuites[spec.specsSuiteId];
      specsSuite.addSpec(spec);
      updateAvancement(specsSuite);
    }

    function appendSuiteEnd(suite) {
      $('#specs_results_' + suite.specsSuiteId + ' > tbody > tr:first').before('<tr><td>' + suite.description + '</td><td colspan="2">' + suite.passedCount + '/' + suite.totalCount + '</td></tr>');

      var specsSuite = specsSuites[suite.specsSuiteId];
      specsSuite.addSuite(suite);
    }

  </script>

</html>
