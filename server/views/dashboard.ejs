<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>TiSpec</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">

    <link href="/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/lib/bootstrap/css/bootstrap-responsive.min.css" rel="stylesheet">
    <link href="/stylesheets/tispec.css" rel="stylesheet">


    <script type="text/javascript" src="/lib/bootstrap/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="/javascripts/jquery-2.0.0.min.js"></script>
    <script type="text/javascript" src="/javascripts/bootstrap-tooltip.js"></script>
    <script type="text/javascript" src="/javascripts/bootstrap-popover.js"></script>
    <script type="text/javascript" src="/javascripts/jquery.knob.js"></script>
    <script type="text/javascript" src="/socket.io/socket.io.js"></script>

    <script type="text/javascript" src="/javascripts/underscore-min.js"></script>
    <script type="text/javascript" src="/javascripts/SpecsSuite.js"></script>
  </head>

  <body data-spy="scroll" data-target=".bs-docs-sidebar">

      <div class="row-fluid">
        <div class="page-header" style="margin-top: 0px;">
          <h1 style="padding-left: 20px;">Tispec <small>The ultimate Titanium test engine</small></h1>
        </div>
      </div>

      <div id="specs_suites" class="row-fluid">
        <!-- specs_suites here -->
      </div>

    </div>
  </body>

  <script type="text/javascript">

    var socket, specsSuites = {};

    // Socket
    // =========================================================================

    socket = io.connect('http://localhost');

    socket.on('confirmSpec', function (expectedBehavior) {
      var confirmationDiv = $('#spec_confirmation_' + expectedBehavior.specsSuiteId);

      confirmationDiv.find('.confirmation_expected_message').text(expectedBehavior.description);
      confirmationDiv.show();
    });

    socket.on('hello', function(_specsSuite) {
      var specsSuite = new SpecsSuite(_specsSuite.id, _specsSuite.appName, _specsSuite.appVersion, _specsSuite.deviceName, _specsSuite.deviceModel)

      specsSuites[specsSuite.id] = specsSuite

      $.get('/specs_suites/' + specsSuite.id, function(html) {
        $('#specs_suites').append(html);
        initializeView(specsSuite);
      });
    });

    socket.on('start', function(_specsSuite) {
      specsSuite = specsSuites[_specsSuite.specsSuiteId];
      specsSuite.setTotalCount(_specsSuite.totalCount);
    });

    socket.on('specStart', function(_spec) {
      var specsSuite = specsSuites[_spec.specsSuiteId],
          spec       = new Spec(_spec.id, _spec.suiteName, _spec.description);

      specsSuite.addSpec(spec);
      updateAvancement(this);
    });

    socket.on('specEnd', function(_spec) {
      var specsSuite = specsSuites[_spec.specsSuiteId],
          spec       = specsSuite.getSpec(_spec.id);

      spec.setResult(_spec.totalCount, _spec.passedCount, _spec.failedCount, _spec.passed, _spec.subSpecs);
      spec.showResults();
    });

    socket.on('suiteEnd', function(_suite) {
      var specsSuite = specsSuites[_suite.specsSuiteId],
          suite = new Suite(_suite.specsSuiteId, _suite.description, _suite.totalCount, _suite.passedCount);

      specsSuite.addSuite(suite);
      suite.showResults();
    });

    socket.on('end', function(specsSuiteId) {
      $('.spec_row').each(function() {
        // Add a popover displaying the results of the specs
        if ($(this).data('content')) {
          $(this).popover('hide');
        }
      });
    });

    function runSpecs(specsSuiteId, form) {
      var specsSuite = specsSuites[specsSuiteId];
      initializeView(specsSuite);

      var filter = $(form).find(':input').first().val();
      socket.emit('runSpecs', {specsSuiteId: specsSuiteId, filter: filter});
      return false;
    }

    function validateSpec(specsSuiteId, valide) {
      $('#spec_confirmation_' + specsSuiteId).hide();
      socket.emit('confirmSpecResult', { specsSuiteId: specsSuiteId, valide: valide });
    }

    function endSpecsSuite(specsSuiteId) {
      delete specsSuites[specsSuiteId];
      $('#specs_suite_' + specsSuiteId).remove();
    }

    // Specs
    // =========================================================================

    function initializeView(specsSuite) {
      $('#specs_results_' + specsSuite.id).find("tr:gt(0)").remove();
      $('#specs_suite_avancement_success_' + specsSuite.id + ' > .bar').css("width", "0%");
      $('#specs_suite_avancement_error_' + specsSuite.id + ' > .bar').css("width", "0%");
      $('#specs_suite_avancement_' + specsSuite.id).val(0).trigger('change');
      $('#specs_suite_title_' + specsSuite.id).text(specsSuite.appName + ' (' + specsSuite.appVersion + ') / ' + specsSuite.deviceName);
      $("#specs_suite_avancement_" + specsSuite.id).knob({
        width:    60,
        height:   60,
        readOnly: true
      });
    }

    function updateAvancement(specsSuite) {
      var passed           = specsSuite.passedCount,
          error            = specsSuite.errorCount,
          advancement      = (passed+error)/specsSuite.totalCount * 100,
          passedPercentage = (passed / specsSuite.totalCount) * 100,
          errorPercentage  = (error / specsSuite.totalCount) * 100;

      $('#specs_suite_avancement_success_' + specsSuite.id + ' > .bar').css( "width", passedPercentage + "%" );
      $('#specs_suite_avancement_error_' + specsSuite.id + ' > .bar').css( "width", errorPercentage + "%" );
      $('#specs_suite_avancement_' + specsSuite.id).val( advancement ).trigger('change');
    }
  </script>

</html>
